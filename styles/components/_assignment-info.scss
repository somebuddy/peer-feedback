/*
* Short information about assignment in assignment details page header
*/

$line-height: 1.5rem !default;
$column-width: 1rem !default;
$max-page-width: 60rem !default;

.assignment-info {
  @include row-container;
  flex-wrap: wrap;
  @include relative;
  max-width: $max-page-width;
  margin: 0 (-$column-width) $line-height;
  font-family: font-family(sans);

  @media (min-width: 40rem) {
    margin: 0 auto $line-height;
  }

  // Component: parent-path
  .parent-path {
    order: -3;
    @include flex-child-fluid($basis: 100%);
    @include row-container;
    margin-left: -$column-width;

    .path {
      font-size: $line-height/2;
      text-transform: uppercase;
      font-weight: 600;
      color: white;

      &:after {
        content: '';
        display: block;
        @include size($line-height/4, $line-height/4);
        margin-left: $column-width/2;
        border-top: 2px solid;
        border-right: 2px solid;
        transform: rotate(45deg);
      }

      &:last-child:after {
        display: none;
      }
    }
  }

  // Component: categories
  .categories {
    order: -2;
    @include flex-child-fluid($basis: 50%);
    @include row-container;
    margin-left: -$column-width;
    margin-right: $column-width;
  }

  @media (min-width: 768px) {
    .parent-path {
      @include flex-child-fluid($basis: 50%);
      margin-right: auto;
    }

    .categories {
      @include flex-child-fixed($basis: auto);
    }
  }

  // Component: main (assignment description)
  .main {
    order: 0;
    @include flex-child-fluid($basis: 100%);
    @include flex-column;
    margin-top: $line-height;
    margin-bottom: $line-height;
  }

  @media (min-width: 768px) {
    .main {
      @include flex-child-fluid($basis: 60%);
    }
  }

  // Component: assignment score value, open-details-link
  .score, .open-details {
    order: 2;
    @include flex-child-fixed($basis: auto);

    .earned-score { color: rgba(255,255,255,.8); }
  }

  @media (max-width: 768px) {
    .score {
      order: -1;
      min-height: 2 * $line-height;

      .earned-score {
        @include flex-row;
        @include flex-align-middle;

        .title, .total {
          font-size: .625rem;
        }

        .value {
          font-size: 1.25rem;
          line-height: $line-height;
          margin: 0 $column-width;
        }
      }
    }

    .open-details {
      order: 99;
      min-height: 2 * $line-height;
      margin: $line-height/2 auto;
    }
  }

  // Component: wide screen filler
  .filler {
    display: none;

    @media (min-width: 768px) {
      display: flex;
      order: 1;
    }
  }

  // Element: assignment title
  .assignment-title {
    font-family: font-family(condensed);
    font-weight: 100;
    font-size: $line-height * 1.5;
    line-height: $line-height * 2;
    margin: $line-height/2 0;
  }

  // Element: assignment description
  .assignment-description {
    font-weight: 400;
    opacity: $secondary-opacity;
    font-size: 1.125rem;
    line-height: $line-height;
    margin-bottom: $line-height/2;
    overflow: hidden;
  }

  // Element: tags
  .tags {
    margin-left: -$column-width;

    > .tag {
      color: white;
      opacity: $secondary-opacity;
    }
  }

  // Element: level badge
  .level {
    @include relative;
    font-size: font-size(small) * 1rem;
    padding-left: 5 * $line-height/2 + $column-width/2;
    opacity: $secondary-opacity;

    &:before, &:after {
      content: '';
      display: block;
      @include absolute($top: .3125 * $line-height, $left: 0);
      @include size(5 * $line-height/2, .375 * $line-height);
      background-image: linear-gradient(90deg, rgba(255,255,255, 1) #{.375 * $line-height}, transparent $line-height/8);
      background-size: $line-height/2 $line-height/2;
      background-repeat: repeat-x;
    }

    &:before {
      opacity: .2;
    }

    @for $i from 0 through 5 {
      &.level-#{$i}:after { width: $i * $line-height/2; }
    }
  }

  // Modifications: full/short info
  .score { display: none; }
  .open-details { display: flex; }
  .tags { display: none; }

  &.full {
    .score { display: flex; }
    .tags { display: flex; }
    .open-details { display: none; }
  }
}

@mixin assignment-info-colorize ($cls: null, $color: white) {
  $selector: if($cls, "&." + $cls, "&");
  #{$selector} {
    .assignment-title {
      color: lighten($color, 10%);
    }

    .path.project-link {
      color: lighten($color, 20%);
    }

    .level {
      &:after {
        background-image: linear-gradient(90deg, lighten($color, 10%) #{.375 * $line-height}, transparent $line-height/8);
      }
    }
  }
}

.assignment-info {
  @include assignment-info-colorize($color: #F5DD00);
  @include assignment-info-colorize(blue, $color: #2196F3);
  @include assignment-info-colorize(red, $color: #F44336);
  @include assignment-info-colorize(amber, $color: #FFC107);
  @include assignment-info-colorize(yellow, $color: #F5DD00);
  @include assignment-info-colorize(purple, $color: #9C27B0);
}