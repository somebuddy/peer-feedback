$line-height: 1.5rem !default;
$column-width: 1rem !default;
$max-page-width: 60rem !default;

// Assigment state container
.assignment-state {
  font-family: font-family(sans);
  max-width: 60rem;
  margin: 0 auto;
}

// Step widget
.step-widget {
  @include widget-layout;
  @include widget-colorize($background: rgba(white, .2), $color: #FFF);

  @include row-container;
  flex-wrap: wrap;

  @include relative;
  min-height: 4*$line-height;
  padding: $line-height/2 $column-width;
  margin: $line-height auto;
  border: none;
  border-radius: $line-height/4;
  overflow: hidden;
  z-index: 0; // to fix chrome rounded border and overflow bug
  transition: all 1s ease;

  // Main components: header, footer, content
  > header, > footer, > .content {
    @include flex-child-fluid($basis: 100%);
    margin: $line-height/2 0;
    max-width: 100%;
  }

  .content { margin: 2*$line-height 0; }
  header ~ .content { margin-top: $line-height/2; }
  .content + .content,  .content + footer { margin-top: -$line-height; }

  // Component: header and footer
  > header, > footer {
    line-height: $line-height/2;
    font-weight: 600;
    text-transform: uppercase;
    opacity: $secondary-opacity;
  }

  > header {
    font-size: 0.6875rem;
    margin-left: $column-width * 2;
  }

  > footer {
    font-size: 0.625rem;
    margin-right: $column-width * 2;
  }

  // Component: content
  .content {
    @include flex-rows;

    .message {
      @include flex-child-fluid($basis: 100%);
      font-size: 1.125rem;
      opacity: .9;
    }

    .message + .message {
      margin-top: $line-height/2;
    }
  }

  // Secondary component: indicator
  .indicator {
    @include absolute(.25*$line-height, auto, auto, $column-width/2);
    @include flex-center;
    font-family: font-family(mono);
    font-weight: 900;
    font-size: $column-width * 4;
    line-height: $line-height * 2;
    opacity: .1;

    .fa { font-size: $column-width * 2.5; }
  }

  // Secondary component: widget action button
  .action {
    @include absolute(auto, -$line-height/2, -$line-height/2, auto);
    @include size($line-height * 2, $line-height * 2);
    @include flex-center;
    font-size: $line-height;
    border-radius: 50%;
    background: rgba(white, .15);
    color: rgba(white, .9);
    margin-right: 0;

    &:before, &:after {
      content: '';
      border-radius: 50%;
      background: rgba(white, .1);
    }

    &:before {
      $action-zone-radius: 2.5*$column-width;
      $action-zone-offset: -1 * $column-width;
      @include absolute($top: $action-zone-offset, $left: $action-zone-offset);
      @include size($action-zone-radius * 2, $action-zone-radius * 2);
    }

    &:after {
      $action-zone-radius: 3.5*$column-width;
      $action-zone-offset: -2 * $column-width;
      @include absolute($top: $action-zone-offset, $left: $action-zone-offset);
      @include size($action-zone-radius * 2, $action-zone-radius * 2);
    }

    transition: all .8s cubic-bezier(0.85, 1.78, 0.63, 0.67);

    &:hover {
      right: $line-height/2;
      bottom: $line-height/2;
      transform: scale(1.5);
    }
  }

  // Media queries
  @media (min-width: 30rem) {
    padding-left: $column-width * 4;
    padding-right: $column-width * 5;

    > header, > footer {
      margin-left: 0;
      margin-right: 0;
      font-size: $line-height/2;
    }

    .indicator { @include absolute(0, null, 0, $column-width); }

    .action {
      @include absolute(50%, 1rem);
      transform: translate3d(0,-50%,0) scale(1.0, 1.0);

      &:before {
        $action-zone-radius: 8*$column-width;
        @include absolute(-$action-zone-radius + $line-height, $left: -1.5 * $column-width);
        @include size($action-zone-radius * 2, $action-zone-radius * 2);
      }

      &:after {
        $action-zone-radius: 10*$column-width;
        @include absolute(-$action-zone-radius + $line-height, $left: -3 * $column-width);
        @include size($action-zone-radius * 2, $action-zone-radius * 2);
      }

      &:hover { transform: translate3d(-$column-width/2,-50%,0) scale(1.5, 1.5); }
    }
  }

  @mixin step-widget-colorize($cls: null, $background: #333, $main-color: white, $secondary-color: white) {
    $selector: if($cls, "&." + $cls, "&");
    #{$selector} {
      @include widget-colorize($background: $background linear-gradient(to left, rgba(0,0,0,0) 40%, rgba(0,0,0,.3)), $color: $main-color);
      .indicator { color: rgba($secondary-color, .9); }
      .action {
        background: rgba($secondary-color, .1);
        color: rgba($secondary-color, .7);
        &:before, &:after { background: rgba($secondary-color, .05); }
      }

      &:hover { background: darken($background, 7%) linear-gradient(to left, rgba(0,0,0,0) 40%, rgba(0,0,0,.3)); }
    }
  }

  // Steps modifications
  @include step-widget-colorize(not-allowed, #DC4437, #FFF, #FFF);
  @include step-widget-colorize(no-works, #36A7D7, #FFF, #000);
  @include step-widget-colorize(reviews-step, #EA4819, #FFF, #000);
  @include step-widget-colorize(wait, #FFF433, #000, #000);
  @include step-widget-colorize(ready, #FFF, #000, #000);
  @include step-widget-colorize(passed, #8BCA76, #FFF, #000);
  @include step-widget-colorize(failded, #DC4437, #FFF, #FFF);

  // Other widgets
  @include step-widget-colorize(made-reviews, darken(#8A40AF, 20%), #FFF, #FFF);
  @include step-widget-colorize(made-reviews, #7691D9, #FFF, #000);
}

// Made reviews: components
.made-reviews {
  .indicator .fa-eye { font-size: 2rem; }

  .reviews-list {
    @include flex-rows;
    @include flex-child-fluid($basis: 100%);
    margin: $line-height (-$column-width/2);
  }
}

// Review badge
.review-badge {
  @include flex-center;
  @include relative;
  @include size($line-height * 1.5, $line-height * 1.5);
  margin: 0 $column-width/2 $line-height;
  background: rgba(white, .3);
  border-radius: 50%;
  transition: all .3s ease;
  z-index: 1;

  // Components
  .user {
    @include flex-center;
    @include size($line-height * 1.5, $line-height * 1.5);
    display: none;
    margin-bottom: $line-height/2;
    background: rgba(white, .3);
    border-radius: 50%;
    font-size: 1rem;
  }

  // Score
  .score {
    @include flex-center;
    font-size: 1.25rem;
    font-family: font-family(condensed);
    font-weight: 400;
    transition: all .3s ease;
  }

  &:hover {
    background: rgba(#FCCA3D, .9);
    .score { color: black; }
  }

  // State: required
  &.required {
    border: 2px solid rgba(white, .6);
  }

  // State: empty
  &:empty, &.empty {
    background: rgba(white, .1);

    &:after {
      content: '?';
      @include absolute(0,0,0,0);
      @include flex-center;
      font-size: 1.5rem;
      font-weight: 400;
      transition: all .3s ease;
    }

    &:hover {
      background: rgba(white, .4);

      &:after {
        color: black;
      }
    }
  }

  // State: done
  &.done {
    &:before, &:after {
      content: '';
    }

    &:before {
      @include absolute(null, -$column-width/2, -$column-width/2);
      @include size($column-width * 1.25, $column-width * 1.25);
      background: darken(#f1c40f, 5%);
      border-radius: 50%;
    }

    &:after {
      @include absolute(null, -.2rem, -.3rem);
      @include size($column-width*3/5, $column-width);
      border-right: 3px solid rgba(black, .7);
      border-bottom: 3px solid rgba(black, .7);
      transform: rotate(40deg) scale(.5);
    }
  }

  // State: done and fixed
  &.done.fixed {
    &:before { background: darken(#84BD6B, 15%); }
    &:after { border-color: white; }

    &:hover {
      background: rgba(#95a5a6, .9);
      border-color: darken(#95a5a6, 30%);

      .score { color: white; }
    }
  }

  // Indicator: stared
  // Indicator: commented
  // Indicator: shared
}